<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find ICRA2023_Quadruped_Competition)/worlds/competition.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="map_description"
    command="$(find xacro)/xacro --inorder '$(find ICRA2023_Quadruped_Competition)/urdf/map.urdf.xacro'" /> 

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
     args="-urdf -param map_description -model competition_map" />


  <!-- robot test-->
  <arg name="robot" default="$(find notspot_description)/urdf/notspot.urdf"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg robot)" />
    <node name="robot_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x 7.7 -y 1.0 -z 0.5 -model notspot_gazebo"/>

     <!-- Controllers -->
    <rosparam file="$(find notspot_gazebo)/config/controllers.yaml" command="load"/>
    <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" ns="notspot_controller"
          args="FR1_joint FR2_joint FR3_joint
                FL1_joint FL2_joint FL3_joint
                RR1_joint RR2_joint RR3_joint
                RL1_joint RL2_joint RL3_joint"/>

    <!-- Robot State Publisher -->
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher" respawn="false" output="screen">
      <remap from="/joint_states" to="/notspot_gazebo/joint_states" />
      <param name="publish_frequency" type="double" value="10" />
    </node>

    <!-- Robot Controller -->
    <include 
        file="$(find notspot_controller)/launch/robot_controller.launch"/>

</launch>
